import pygame
import sys
import math
from pygame.constants import K_BACKSPACE, K_ESCAPE, K_a, K_d
pygame.init()

width = 1200
height = 700

win = pygame.display.set_mode((width, height))
pygame.display.set_caption("Finger Friends Beta v1.0")
FFG = pygame.image.load('FFG.png')
PLAY = pygame.image.load('Play.png')
SETTINGS = pygame.image.load('Settings.png')
NAME = pygame.image.load('name.png')
BG = pygame.image.load('bg_back.png')
BGG = pygame.image.load("bg_complete.png")
DINOLW = pygame.image.load("dino_pxl_left.png")
DINORW = pygame.image.load("dino_pxl_right.png")
DINOR = [ pygame.image.load("dr1.png"), pygame.image.load("dr2.png"), pygame.image.load("dr3.png"), pygame.image.load("dr4.png"), pygame.image.load("dr5.png"), pygame.image.load("dr6.png"), pygame.image.load("dr7.png"), pygame.image.load("dr8.png"), pygame.image.load("dr9.png"), pygame.image.load("dr10.png"), pygame.image.load("dr11.png"), pygame.image.load("dr12.png"),]
DINOL = [ pygame.image.load("dl1.png"), pygame.image.load("dl2.png"), pygame.image.load("dl3.png"), pygame.image.load("dl4.png"), pygame.image.load("dl5.png"), pygame.image.load("dl6.png"), pygame.image.load("dl7.png"), pygame.image.load("dl8.png"), pygame.image.load("dl9.png"), pygame.image.load("dl10.png"), pygame.image.load("dl11.png"), pygame.image.load("dl12.png"),]
DINOAR = [ pygame.image.load("dar1.png"), pygame.image.load("dar2.png"), pygame.image.load("dar3.png"), pygame.image.load("dar4.png"), pygame.image.load("dar5.png"), pygame.image.load("dar6.png"), pygame.image.load("dar7.png"), pygame.image.load("dar8.png"), pygame.image.load("dar9.png"), pygame.image.load("dar10.png"), pygame.image.load("dar11.png"), pygame.image.load("dar12.png"),]
DINOAL = [ pygame.image.load("dal1.png"), pygame.image.load("dal2.png"), pygame.image.load("dal3.png"), pygame.image.load("dal4.png"), pygame.image.load("dal5.png"), pygame.image.load("dal6.png"), pygame.image.load("dal7.png"), pygame.image.load("dal8.png"), pygame.image.load("dal9.png"), pygame.image.load("dal10.png"), pygame.image.load("dal11.png"), pygame.image.load("dal12.png"),]
AIM = pygame.image.load('aim.png')
NAMETAG = pygame.image.load('nametag.png')

class button():
    def __init__(self, color, width,height ,x , y):
        self.color = color
        self.x = x
        self.y = y
        self.width = width
        self.height = height
        self.text = text

    def draw(self,win):
        pygame.draw.rect(win, self.color, (self.x,self.y,self.width,self.height),0)

    def isOver(self, pos):
        if pos[0] > self.x and pos[0] < self.x + self.width:
            if pos[1] > self.y and pos[1] < self.y + self.height:
                return True
            
        return False

def image(image_png, x, y):
    win.blit(image_png, (x,y))

def text(textt, fontf, color, surface, x, y):
    font = pygame.font.Font(f'{fontf}', 64)
    textobj = font.render(textt, True, color)
    textrect = textobj.get_rect()
    textrect.topleft = (x,y)
    win.blit(textobj, textrect)

click = False
def main_menu():
    while True:
        mpos = pygame.mouse.get_pos() 
        namehb = button((255, 255, 255), 366, 72, 416, 378)
        playhb = button((255, 255, 255), 175, 72, 411, 464)
        sethb = button((255, 255, 255), 175, 72, 611, 464)
        win.blit(BG, (0,0)) 
        sethb.draw(win)
        playhb.draw(win)
        namehb.draw(win)
        ffg = image(FFG, 225, 50)
        name = image(NAME, 400, 370)
        play = image(PLAY, 400, 460)
        settings = image(SETTINGS, 600, 460)
        clock = pygame.time.Clock()
        for event in pygame.event.get():

            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            if event.type == pygame.KEYDOWN:
                if event.key == K_ESCAPE:
                    pygame.quit()
                    sys.exit()
            if event.type == pygame.MOUSEBUTTONDOWN:
                if playhb.isOver(mpos):
                    game()
        
        pygame.display.update()
        clock.tick(60)

def game():
    global texts
    x = 100
    y = 100
    dac = 0
    dwc = 0
    vel_x = 8
    vel_y = 21.5
    jump = False
    running = True
    right = False
    click = False
    left = False
    walking = False
    gravity = 6
    a = 23
    attack = False
    while running:
        keys = pygame.key.get_pressed()
        mpx = x + 78/2
        mpy = y + 50
        mp = (mpx,mpy)
        mpos = mx, my = pygame.mouse.get_pos() 
        rel_x, rel_y = mx - mpx, my - mpy
        angle = (180 / math.pi) * -math.atan2(rel_y, rel_x) + 50
        imgc = pygame.transform.rotate(AIM, angle)
        tmx = x 
        tmy = y - 20
        clock = pygame.time.Clock()
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                sys.exit()
            if event.type == pygame.KEYDOWN:
                if event.key == K_ESCAPE:
                    main_menu()
                if event.key == K_d:
                    walking = True
                if event.key == K_a:
                    walking = True
            if event.type == pygame.KEYUP:
                if event.key == K_d:
                    walking = False
                if event.key == K_a:
                    walking = False
            if event.type == pygame.MOUSEBUTTONDOWN:
                click = True
            if event.type == pygame.MOUSEBUTTONUP:
                attack = True
                click = False
                

        keys = pygame.key.get_pressed()
        if click == False:
            if angle < 180:
                if angle > -70:
                    right = True
                    left = False 
            elif angle > 180:
                left = True
                right = False
            elif angle > 70:
                left = True
                right = False 
        if keys[pygame.K_a]:
         x -= vel_x
         left = True
         right = False

        if keys[pygame.K_d]:
            x +=  vel_x
            right = True
            left = False

        if  jump is False and keys[pygame.K_SPACE]:
            jump = True

        if  jump == True:
            y -=  vel_y
            vel_y -= 0.7

        if  vel_y < -21.5:
            jump = False
            vel_y = 21.5


        isl1 = pygame.draw.rect(win, (255,255,255), (103, 345, 397, 67))
        isl2 = pygame.draw.rect(win, (255,255,255), (700, 345, 377, 60))
        isl3 = pygame.draw.rect(win, (255,255,255), (85, 555, 990, 100))
        dinohit = pygame.draw.rect(win, (255,255,255), (x, y, 69, 100))
#---------------------------------------------------------------------------------------------------
#---------------------------------------------------------------------------------------------------
        win.blit(BGG, (0,0))
#---------------------------------------------------------------------------------------------------
#---------------------------------------------------------------------------------------------------
        if click:
            win.blit(imgc,(mpx - int(imgc.get_width()/2),mpy - int(imgc.get_height()/2)))

        if isl3.colliderect(dinohit):
            if abs(dinohit.bottom - isl3.top) < 70:
                y = 450

        if isl2.colliderect(dinohit):
            if abs(dinohit.bottom - isl2.top) < 70:
                y = 240

        if isl1.colliderect(dinohit):
            if abs(dinohit.bottom - isl1.top) < 70:
                y = 240


        if dwc + 1 >= 36:
            dwc = 0

        if a == 23:
            y += gravity

        if dac + 1 >= 36:
            dac = 0
            attack = False

        if right:
            if attack:
                win.blit(DINOAR[dac//3], (x,y))
                dac += 1
            elif walking:
                win.blit(DINOR[dwc//3], (x,y))
                dwc += 1
            elif walking == False:
                win.blit(DINORW, (x,y))

        if left:
            if attack:
                win.blit(DINOAL[dac//3], (x,y))
                dac += 1
            elif walking:
                win.blit(DINOL[dwc//3], (x,y))
                dwc += 1
            elif walking == False:
                win.blit(DINOLW, (x,y))

        pygame.display.update()
        clock.tick(60)
main_menu()
